AddDoctor


// import React,{useState} from 'react'
// import AdminHeader from '../components/AdminHeader'


// const AddDoctor = () => {
//   const [doctorName,setdoctoreName]=useState("");
//   const [mailid,setmailid]=useState("");
//   const [contact,setcontact]=useState("")
//   const [dutydays,setdutydays]=useState([])
//   const [timeSlots, setTimeSlots] = useState([{ startTime: '', endTime: '' }]);
//   const [image, setImage] = useState(null);
//   const [error,setError]=useState('')


//   const handleCheckboxChange = (day) => {
//     setdutydays((prev) =>
//       prev.includes(day) ? prev.filter((d) => d !== day) : [...prev, day]
//     );
//   };

//   const addTimeSlot = () => {
//     setTimeSlots([...timeSlots, { start_time: '', end_time: '' }]);
//   };

//   const handleImageChange = (e) => {
//     setImage(e.target.files[0]);
//   };

//   const handleTimeChange = (index, field, value) => {
//     const updatedTimeSlots = [...timeSlots];
//     updatedTimeSlots[index][field] = value;
//     setTimeSlots(updatedTimeSlots);
//   };

//   const handleSubmit = async (e) =>
//     {
//       e.preventDefault();
//       try{
//         const formData=new FormData();
//         formData.append("doctor_name",doctorName);
//         formData.append("email",mailid);
//         formData.append("contact",contact);
//         formData.append('working_days', JSON.stringify(dutydays));
//         formData.append('time_schedules', JSON.stringify(timeSlots));  // Convert array to JSON
//         if (image) 
//           {
//           formData.append('magePath', image);
//         }
  
//         const res =await fetch("/api/add_doctor",{
//           method: "POST",
//           credentials: "include",
//           body:formData,
//         })
//         if(!res.ok)
//         {
//           throw new Error("Error add doctors")
//         }
//         alert("doctor added Successfully")
//         setdoctoreName("")
//         setmailid("")
//         setcontact("")
//         setdutydays([])
//         setTimeSlots([{ start_time: '', end_time: '' }]);
//         setImage(null)
//       }
//       catch(error)
//       {
//         console.log(error)
//         alert("Internal Server error")
//       }
//     }


//   return (
//     <div className="bg-[#0098B9] min-h-screen flex flex-col">
//       <AdminHeader/>
//       <div className="p-4">
//         <div className=" md:h-[78vh] bg-[#ffffff] border border-cyan-300 rounded-lg p-4">
//             <h1 className="text-2xl font-bold text-center">Add Doctor</h1>
//             <form onSubmit={handleSubmit} className="m-4 md:mt-[20px] md:px-[100px]">
//                 <div className="flex justify-between mb-[10px] ">
//                     <label className="text-[10px] md:text-xl font-semibold text-center">Doctor Name</label>
//                     <input type="text" 
//                      value={doctorName}
//                      onChange={(e) => setdoctoreName(e.target.value)}
//                     className="w-[60%] md:w-[50%] md:h-[40px] rounded-lg border-2 border-cyan-300"/>
//                 </div>
//                 <div className="flex justify-between mb-[10px] ">
//                     <label className="text-[10px] md:text-xl font-semibold text-center">Email-ID</label>
//                     <input type="email" 
//                      value={mailid}
//                      onChange={(e) => setmailid(e.target.value)}
//                     className="w-[60%] md:w-[50%] md:h-[40px] rounded-lg border-2 border-cyan-300"/>
//                 </div>
//                 <div className="flex justify-between mb-[10px]">
//                     <label className="text-[10px] md:text-xl font-semibold text-center ">Contact</label>
//                     <input type="number"
//                      value={contact}
//                      onChange={(e) => setcontact(e.target.value)}
//                       className="w-[60%] md:w-[50%] md:h-[40px] rounded-lg border-2 border-cyan-300"/>
//                 </div>
//                 <div className="flex flex-col md:flex-row md:justify-between mb-[10px]">
//                     <label className="text-[13px] md:text-xl font-semibold text-center ">Duty Days</label>
//                     <div className="grid grid-cols-6 md:flex">
//                     {["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].map((day) => (
//                     <label key={day} className="ml-4">
//                       <input type="checkbox" checked={dutydays.includes(day)} onChange={() => handleCheckboxChange(day)} />
//                       {day}
//                     </label>
//                 ))}
//               </div>
//                 </div>
//                 <div className="flex flex-col md:flex-row md:justify-between mb-[10px]">
//                     <label className="text-[13px] md:text-xl font-semibold text-center ">Time Slot</label>
//                     <div>
//                 {timeSlots.map((slot, index) => (
//                   <div key={index} className="flex gap-2">
//                     <input type="time" value={slot.startTime} onChange={(e) => handleTimeChange(index, 'startTime', e.target.value)} />
//                     <input type="time" value={slot.endTime} onChange={(e) => handleTimeChange(index, 'endTime', e.target.value)} />
//                   </div>
//                 ))}
//                 <button type="button" className="text-cyan-600 underline" onClick={addTimeSlot}>
//                   + Add Time Slot
//                 </button>
//               </div>
//                 </div>
//                 <div className="flex justify-between mb-4">
//               <label className="text-[10px] md:text-xl font-semibold text-center">Upload Image</label>
//               <input type="file" accept="image/*" onChange={handleImageChange} />
//             </div>
//             <div className="flex justify-between md:mt-[50px]">
//               <button className="bg-white py-2 px-6 rounded border-4 border-[#0098B9]">Cancel</button>
//               <button type="submit" className="bg-[#0098B9] py-2 px-8 rounded border-4 border-white text-white">
//                 Add
//               </button>
//             </div>
//             </form>
//         </div>
//       </div>
//     </div>
//   )
// }

// export default AddDoctor

// import React, { useState } from 'react';
// import AdminHeader from '../components/AdminHeader';

// const AddDoctor = () => {
//     const [doctorName, setDoctorName] = useState('');
//     const [email, setEmail] = useState('');
//     const [contact, setContact] = useState('');
//     const [dutyDays, setDutyDays] = useState([]);
//     const [timeSlots, setTimeSlots] = useState([{ startTime: '', endTime: '' }]);
//     const [image, setImage] = useState(null);

//     const handleImageChange = (e) => {
//         setImage(e.target.files[0]);
//     };

//     const handleTimeSlotChange = (index, field, value) => {
//         const updatedSlots = [...timeSlots];
//         updatedSlots[index][field] = value;
//         setTimeSlots(updatedSlots);
//     };

//     const addTimeSlot = () => {
//         setTimeSlots([...timeSlots, { startTime: '', endTime: '' }]);
//     };

//     const removeTimeSlot = (index) => {
//         if (timeSlots.length > 1) {
//             setTimeSlots(timeSlots.filter((_, i) => i !== index));
//         }
//     };

//     const handleSubmit = async (e) => {
//         e.preventDefault();
        
//         const formData = new FormData();
//         formData.append('doctor_name', doctorName);
//         formData.append('email', email);
//         formData.append('contact', contact);
//         formData.append('working_days', JSON.stringify(dutyDays));
//         formData.append('time_schedules', JSON.stringify(timeSlots));  // Convert array to JSON
//         if (image) {
//             formData.append('imagePath', image);
//         }

//         try {
//             const response = await fetch('/api/add_doctor', {
//                 method: 'POST',
//                 body: formData,
//             });

//             if (response.ok) {
//                 alert('Doctor added successfully');
//                 setDoctorName('');
//                 setEmail('');
//                 setContact('');
//                 setDutyDays([]);
//                 setTimeSlots([{ startTime: '', endTime: '' }]);
//                 setImage(null);
//             } else {
//                 alert('Failed to add doctor');
//             }
//         } catch (error) {
//             console.error('Error adding doctor:', error);
//             alert('Error adding doctor');
//         }
//     };

//     const handleDutyDayChange = (day) => {
//         setDutyDays(prev => prev.includes(day) ? prev.filter(d => d !== day) : [...prev, day]);
//     };

//     return (
//         <div className="bg-[#0098B9] min-h-screen flex flex-col">
//             <AdminHeader />
//             <div className="p-4">
//                 <div className="md:h-[78vh] bg-white border border-cyan-300 rounded-lg p-4">
//                     <h1 className="text-2xl font-bold text-center">Add Doctor</h1>
//                     <form onSubmit={handleSubmit} className="m-4 md:mt-[20px] md:px-[100px]">
//                         <div className="mb-4 flex justify-between">
//                             <label className="text-xl font-semibold">Doctor Name</label>
//                             <input type="text" value={doctorName} onChange={(e) => setDoctorName(e.target.value)} className="w-[50%] md:h-[40px] rounded-lg border-2 border-cyan-300" required />
//                         </div>
//                         <div className="mb-4 flex justify-between">
//                             <label className="text-xl font-semibold">Email-ID</label>
//                             <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} className="w-[50%] md:h-[40px] rounded-lg border-2 border-cyan-300" required />
//                         </div>
//                         <div className="mb-4 flex justify-between">
//                             <label className="text-xl font-semibold">Contact</label>
//                             <input type="number" value={contact} onChange={(e) => setContact(e.target.value)} className="w-[50%] md:h-[40px] rounded-lg border-2 border-cyan-300" required />
//                         </div>

//                         <div className="mb-4">
//                             <label className="text-xl font-semibold">Duty Days</label>
//                             <div className="flex gap-4 mt-2">
//                                 {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(day => (
//                                     <label key={day} className="flex items-center">
//                                         <input type="checkbox" checked={dutyDays.includes(day)} onChange={() => handleDutyDayChange(day)} className="h-5 w-5 text-cyan-500" />
//                                         <span className="ml-2">{day}</span>
//                                     </label>
//                                 ))}
//                             </div>
//                         </div>

//                         <div className="mb-4">
//                             <label className="text-xl font-semibold">Time Slots</label>
//                             {timeSlots.map((slot, index) => (
//                                 <div key={index} className="flex justify-between items-center mt-2">
//                                     <input type="time" value={slot.startTime} onChange={(e) => handleTimeSlotChange(index, 'startTime', e.target.value)} className="w-[40%] md:h-[40px] rounded-lg border-2 border-cyan-300" required />
//                                     <input type="time" value={slot.endTime} onChange={(e) => handleTimeSlotChange(index, 'endTime', e.target.value)} className="w-[40%] md:h-[40px] rounded-lg border-2 border-cyan-300" required />
//                                     {index > 0 && (
//                                         <button type="button" onClick={() => removeTimeSlot(index)} className="text-red-500 ml-2">✖</button>
//                                     )}
//                                 </div>
//                             ))}
//                             <button type="button" onClick={addTimeSlot} className="mt-2 text-cyan-600 underline">+ Add Time Slot</button>
//                         </div>

//                         <div className="mb-4">
//                             <label className="text-xl font-semibold">Upload Doctor Image</label>
//                             <input type="file" accept="image/*" onChange={handleImageChange} className="mt-2" required />
//                         </div>

//                         <div className="flex justify-between mt-6">
//                             <button type="button" className="bg-white py-2 px-6 rounded border-4 border-[#0098B9]">Cancel</button>
//                             <button type="submit" className="bg-[#0098B9] py-2 px-8 rounded border-4 border-white text-white">Add Doctor</button>
//                         </div>
//                     </form>
//                 </div>
//             </div>
//         </div>
//     );
// };

// export default AddDoctor;
