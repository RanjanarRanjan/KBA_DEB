import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import AdminHeader from '../components/AdminHeader';
import { register } from 'module';

const EditDoctor = () => {
  const [doctorData, setDoctorData] = useState({
    doctor_name: '',
    email: '',
    contact: '',
    working_days: [],
    time_schedules: [{ start_time: '', end_time: '' }],
    image: null
  });
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(true);

  const navigate = useNavigate();

  const fetchDoctor = async () => {
    try {
      const doctorId = "123"; // Replace with actual ID from URL or state
      const response = await fetch(`http://localhost:5000/api/get_one_doctor/${doctorId}`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' },
      });
  
      if (!response.ok) {
        throw new Error(`Failed to fetch doctor data: ${response.status}`);
      }
  
      const data = await response.json();
      setDoctorData(data);
    } catch (err) {
      console.error(err.message);
      setError(err.message);
    }
  };
  
  useEffect(() => {
    fetchDoctor();
  }, []);
  

  const handleCheckboxChange = (day) => {
    setDoctorData((prev) => ({
      ...prev,
      working_days: prev.working_days.includes(day)
        ? prev.working_days.filter((d) => d !== day)
        : [...prev.working_days, day]
    }));
  };

  const addTimeSlot = () => {
    setDoctorData((prev) => ({
      ...prev,
      time_schedules: [...prev.time_schedules, { start_time: '', end_time: '' }]
    }));
  };

  const handleTimeChange = (index, field, value) => {
    const updatedTimeSlots = [...doctorData.time_schedules];
    updatedTimeSlots[index][field] = value;
    setDoctorData({ ...doctorData, time_schedules: updatedTimeSlots });
  };

  const handleImageChange = (e) => {
    setDoctorData({ ...doctorData, image: e.target.files[0] });
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    try {
      const formData = new FormData();
      formData.append('doctor_name', doctorData.doctor_name);
      formData.append('email', doctorData.email);
      formData.append('contact', doctorData.contact);
      formData.append('working_days', JSON.stringify(doctorData.working_days));
      formData.append('time_schedules', JSON.stringify(doctorData.time_schedules));
  
      if (doctorData.image) {
        formData.append('doctorImage', doctorData.image);
      }
  
      console.log("Submitting FormData:", Object.fromEntries(formData.entries()));
  
      const res = await fetch('/api/updatedoctor', {
        method: 'PUT',
        credentials: 'include',
        body: formData
      });
  
      if (!res.ok) {
        const errorText = await res.text();
        throw new Error(`Error updating doctor: ${res.status} - ${errorText}`);
      }
  
      alert('Doctor updated successfully');
      navigate('/admin/doctors'); // Navigate after update
    } catch (error) {
      console.error("Update error:", error);
      alert('Failed to update doctor: ' + error.message);
    }
  };
  
  return (
    <div className="bg-[#0098B9] min-h-screen flex flex-col">
      <AdminHeader />
      <div className="p-4">
        <div className="bg-white border border-cyan-300 rounded-lg p-4">
          <h1 className="text-2xl font-bold text-center">Edit Doctor</h1>
          {error && <p className="text-red-500 text-center">{error}</p>}
          <form onSubmit={handleSubmit} className="m-4">
            <div className="mb-4">
              <label className="font-semibold">Doctor Name</label>
              <input type="text" value={doctorData.doctor_name} onChange={(e) => setDoctorData({ ...doctorData, doctor_name: e.target.value })} className="w-full border rounded p-2" />
            </div>
            <div className="mb-4">
              <label className="font-semibold">Email</label>
              <input type="email" value={doctorData.email} onChange={(e) => setDoctorData({ ...doctorData, email: e.target.value })} className="w-full border rounded p-2" />
            </div>
            <div className="mb-4">
              <label className="font-semibold">Contact</label>
              <input type="text" value={doctorData.contact} onChange={(e) => setDoctorData({ ...doctorData, contact: e.target.value })} className="w-full border rounded p-2" />
            </div>
            <div className="mb-4">
              <label className="font-semibold">Duty Days</label>
              <div className="grid grid-cols-3 gap-2">
                {["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].map((day) => (
                  <label key={day} className="flex items-center">
                    <input type="checkbox" checked={doctorData.working_days.includes(day)} onChange={() => handleCheckboxChange(day)} /> {day}
                  </label>
                ))}
              </div>
            </div>
            <div className="mb-4">
              <label className="font-semibold">Time Slots</label>
              {doctorData.time_schedules.map((slot, index) => (
                <div key={index} className="flex gap-2 mb-2">
                  <input type="time" value={slot.start_time} onChange={(e) => handleTimeChange(index, 'start_time', e.target.value)} />
                  <input type="time" value={slot.end_time} onChange={(e) => handleTimeChange(index, 'end_time', e.target.value)} />
                </div>
              ))}
              <button type="button" className="text-cyan-600 underline" onClick={addTimeSlot}>+ Add Time Slot</button>
            </div>
            <div className="mb-4">
              <label className="font-semibold">Upload Image</label>
              <input type="file" accept="image/*" onChange={handleImageChange} />
            </div>
            <div className="flex justify-between">
              <button type="submit" className="bg-[#0098B9] text-white py-2 px-4 rounded">Update</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default EditDoctor;



// import React, { useState, useEffect } from 'react';
// import AdminHeader from '../components/AdminHeader';

// const EditDoctor = ({ doctorName }) => {
//   const [doctorData, setDoctorData] = useState({
//     doctor_name: '',
//     email: '',
//     contact: '',
//     working_days: [],
//     time_schedules: [{ start_time: '', end_time: '' }],
//     image: null
//   });
//   const [error, setError] = useState('');

//   useEffect(() => {
//     if (doctorName) {
//       fetch(`/api/get_one_doctor?doctor_name=${doctorName}`, { credentials: 'include' })
//         .then((res) => res.json())
//         .then((data) => {
//           setDoctorData({
//             doctor_name: data.doctor_name,
//             email: data.email,
//             contact: data.contact,
//             working_days: data.working_days || [],
//             time_schedules: data.time_schedules || [{ start_time: '', end_time: '' }],
//             image: data.image || null
//           });
//         })
//         .catch(() => setError('Error fetching doctor data'));
//     }
//   }, [doctorName]);

//   const handleCheckboxChange = (day) => {
//     setDoctorData((prev) => ({
//       ...prev,
//       working_days: prev.working_days.includes(day)
//         ? prev.working_days.filter((d) => d !== day)
//         : [...prev.working_days, day]
//     }));
//   };

//   const addTimeSlot = () => {
//     setDoctorData((prev) => ({
//       ...prev,
//       time_schedules: [...prev.time_schedules, { start_time: '', end_time: '' }]
//     }));
//   };

//   const handleTimeChange = (index, field, value) => {
//     const updatedTimeSlots = [...doctorData.time_schedules];
//     updatedTimeSlots[index][field] = value;
//     setDoctorData({ ...doctorData, time_schedules: updatedTimeSlots });
//   };

//   const handleImageChange = (e) => {
//     setDoctorData({ ...doctorData, image: e.target.files[0] });
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     try {
//       const formData = new FormData();
//       formData.append('doctor_name', doctorData.doctor_name);
//       formData.append('email', doctorData.email);
//       formData.append('contact', doctorData.contact);
//       formData.append('working_days', JSON.stringify(doctorData.working_days));
//       formData.append('time_schedules', JSON.stringify(doctorData.time_schedules));
//       if (doctorData.image) {
//         formData.append('doctorImage', doctorData.image);
//       }

//       const res = await fetch('/api/updatedoctor', {
//         method: 'PUT',
//         credentials: 'include',
//         body: formData
//       });

//       if (!res.ok) {
//         throw new Error('Error updating doctor');
//       }
//       alert('Doctor updated successfully');
//     } catch (error) {
//       console.error(error);
//       alert('Internal server error');
//     }
//   };

//   return (
//     <div className="bg-[#0098B9] min-h-screen flex flex-col">
//       <AdminHeader />
//       <div className="p-4">
//         <div className="bg-white border border-cyan-300 rounded-lg p-4">
//           <h1 className="text-2xl font-bold text-center">Edit Doctor</h1>
//           {error && <p className="text-red-500 text-center">{error}</p>}
//           <form onSubmit={handleSubmit} className="m-4">
//             <div className="mb-4">
//               <label className="font-semibold">Doctor Name</label>
//               <input type="text" value={doctorData.doctor_name} readOnly className="w-full border rounded p-2" />
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Email</label>
//               <input type="email" value={doctorData.email} onChange={(e) => setDoctorData({ ...doctorData, email: e.target.value })} className="w-full border rounded p-2" />
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Contact</label>
//               <input type="text" value={doctorData.contact} onChange={(e) => setDoctorData({ ...doctorData, contact: e.target.value })} className="w-full border rounded p-2" />
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Duty Days</label>
//               <div className="grid grid-cols-3 gap-2">
//                 {["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].map((day) => (
//                   <label key={day} className="flex items-center">
//                     <input type="checkbox" checked={doctorData.working_days.includes(day)} onChange={() => handleCheckboxChange(day)} /> {day}
//                   </label>
//                 ))}
//               </div>
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Time Slots</label>
//               {doctorData.time_schedules.map((slot, index) => (
//                 <div key={index} className="flex gap-2 mb-2">
//                   <input type="time" value={slot.start_time} onChange={(e) => handleTimeChange(index, 'start_time', e.target.value)} />
//                   <input type="time" value={slot.end_time} onChange={(e) => handleTimeChange(index, 'end_time', e.target.value)} />
//                 </div>
//               ))}
//               <button type="button" className="text-cyan-600 underline" onClick={addTimeSlot}>+ Add Time Slot</button>
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Upload Image</label>
//               <input type="file" accept="image/*" onChange={handleImageChange} />
//             </div>
//             <div className="flex justify-between">
//               <button type="submit" className="bg-[#0098B9] text-white py-2 px-4 rounded">Update</button>
//             </div>
//           </form>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default EditDoctor;


// import React, { useState, useEffect } from 'react';
// import { useNavigate } from 'react-router-dom';
// import AdminHeader from '../components/AdminHeader';

// const EditDoctor = () => {
//   const [doctorData, setDoctorData] = useState({
//     doctor_name: '',
//     email: '',
//     contact: '',
//     working_days: [],
//     time_schedules: [{ start_time: '', end_time: '' }],
//     image: null
//   });
//   const [error, setError] = useState('');

// const navigate= useNavigate();

//   useEffect(() => {
//     const fetchDoctor = async () => {
//         try {
//             const response = await fetch('/api/get_one_doctor', {
//                 method: 'GET',
//                 headers: { 'Content-Type': 'application/json' },
//                 credentials: 'include',
//             });
//             if (!response.ok) {
//                 throw new Error('Failed to fetch doctor data');
//             }
//             const data = await response.json();
//             setUser(data); // Make sure Email is also set
//         } catch (err) {
//             setError(err.message);
//         } finally {
//             setLoading(false);
//         }
//     };
//     fetchDoctor();
// }, []);

//   const handleCheckboxChange = (day) => {
//     setDoctorData((prev) => ({
//       ...prev,
//       working_days: prev.working_days.includes(day)
//         ? prev.working_days.filter((d) => d !== day)
//         : [...prev.working_days, day]
//     }));
//   };

//   const addTimeSlot = () => {
//     setDoctorData((prev) => ({
//       ...prev,
//       time_schedules: [...prev.time_schedules, { start_time: '', end_time: '' }]
//     }));
//   };

//   const handleTimeChange = (index, field, value) => {
//     const updatedTimeSlots = [...doctorData.time_schedules];
//     updatedTimeSlots[index][field] = value;
//     setDoctorData({ ...doctorData, time_schedules: updatedTimeSlots });
//   };

//   const handleImageChange = (e) => {
//     setDoctorData({ ...doctorData, image: e.target.files[0] });
//   };

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     try {
//       const formData = new FormData();
//       formData.append('doctor_name', doctorData.doctor_name);
//       formData.append('email', doctorData.email);
//       formData.append('contact', doctorData.contact);
//       formData.append('working_days', JSON.stringify(doctorData.working_days));
//       formData.append('time_schedules', JSON.stringify(doctorData.time_schedules));
//       if (doctorData.image) {
//         formData.append('doctorImage', doctorData.image);
//       }

//       const res = await fetch('/api/updatedoctor', {
//         method: 'PUT',
//         credentials: 'include',
//         body: formData
//       });

//       if (!res.ok) {
//         throw new Error('Error updating doctor');
//       }
//       alert('Doctor updated successfully');
//     } catch (error) {
//       console.error(error);
//       alert('Internal server error');
//     }
//   };

//   return (
//     <div className="bg-[#0098B9] min-h-screen flex flex-col">
//       <AdminHeader />
//       <div className="p-4">
//         <div className="bg-white border border-cyan-300 rounded-lg p-4">
//           <h1 className="text-2xl font-bold text-center">Edit Doctor</h1>
//           {error && <p className="text-red-500 text-center">{error}</p>}
//           <form onSubmit={handleSubmit} className="m-4">
//             <div className="mb-4">
//               <label className="font-semibold">Doctor Name</label>
//               <input type="text" value={doctorData.doctor_name} readOnly className="w-full border rounded p-2" />
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Email</label>
//               <input type="email" value={doctorData.email} onChange={(e) => setDoctorData({ ...doctorData, email: e.target.value })} className="w-full border rounded p-2" />
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Contact</label>
//               <input type="text" value={doctorData.contact} onChange={(e) => setDoctorData({ ...doctorData, contact: e.target.value })} className="w-full border rounded p-2" />
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Duty Days</label>
//               <div className="grid grid-cols-3 gap-2">
//                 {["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"].map((day) => (
//                   <label key={day} className="flex items-center">
//                     <input type="checkbox" checked={doctorData.working_days.includes(day)} onChange={() => handleCheckboxChange(day)} /> {day}
//                   </label>
//                 ))}
//               </div>
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Time Slots</label>
//               {doctorData.time_schedules.map((slot, index) => (
//                 <div key={index} className="flex gap-2 mb-2">
//                   <input type="time" value={slot.start_time} onChange={(e) => handleTimeChange(index, 'start_time', e.target.value)} />
//                   <input type="time" value={slot.end_time} onChange={(e) => handleTimeChange(index, 'end_time', e.target.value)} />
//                 </div>
//               ))}
//               <button type="button" className="text-cyan-600 underline" onClick={addTimeSlot}>+ Add Time Slot</button>
//             </div>
//             <div className="mb-4">
//               <label className="font-semibold">Upload Image</label>
//               <input type="file" accept="image/*" onChange={handleImageChange} />
//             </div>
//             <div className="flex justify-between">
//               <button type="submit" className="bg-[#0098B9] text-white py-2 px-4 rounded">Update</button>
//             </div>
//           </form>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default EditDoctor;


register

// import React,{useState} from 'react'
// import { useNavigate } from 'react-router-dom';
// import { homeImage } from '../assets/images/Index.jsx';
// import { Link } from 'react-router-dom';
// import Nav from '../components/Nav.jsx';

// const Register = () => {
//     const [Username,setusername]=useState('');
//     const [Email,setemail]=useState('');
//     const [Phone,setphone]=useState('');
//     const [DOB,setdob]=useState('');
//     const [Gender,setgender]=useState('');
//     const [UserRole,setuserrole]=useState('user');
//     const [Address,setaddress]=useState('');
//     const [Password,setpassword]=useState('');
//     // const [error,setError]=useState('');

//     const navigate =useNavigate();

//     const handleSignup = async (e) =>
//         {
//             e.preventDefault();
//             try
//             {  
//                 const response = await fetch('/api/signup',{
//                     method:'POST',
//                     credentials:'include',//it is used to get or add cookie
//                     headers:{
//                         'Content-Type':'application/json',
//                     },
//                     body:JSON.stringify({
//                         Username:Username,
//                         Email:Email,
//                         phone:Phone,
//                         dob:DOB,
//                         gender:Gender,
//                         user_role:UserRole,
//                         address:Address,
//                         password:Password})                    
//                 })
//                 if(!response.ok)
//                 {
//                     const errData =await response.json();
//                     throw new Error(errData.msg||'signup faild')
//                 }
//                 navigate('/login');
//             }
//             catch(err)
//             {
//                 setError(err.message||'signup failed')
//             }
//         }

//   return (
//     <div>
//        <div className="h-screen bg-gradient-to-tr from-[#ffffff] to-[#0098B9] pt-[20px] pr-[30px]">
//            <Nav />
//             <div className="flex justify-between">
//                 <div>
//                     <a><img className="w-[90%] mt-[50px]" src={homeImage} alt="home_img" /></a>
//                 </div>
//                 <form onSubmit={handleSignup} className="mr-[60px] mt-[10px]">
//                     <h1 className="text-white text-5xl mb-[30px] text-center">Register</h1>
//                     {/* {error && <p className='text-red-500 mb-4'>{error}</p>} */}
//                     <input  type="text" 
//                             value={Username}
//                             onChange={(e)=>setusername(e.target.value)}
//                             placeholder="Enter your Full Name" 
//                             className="w-[300px] mb-[20px] bg-transparent border-b-2 border-white text-white placeholder-white" required/><br/>

//                     <input  type="email"
//                             value={Email}
//                             onChange={(e)=>setemail(e.target.value)}
//                             placeholder="Enter your Email" 
//                             className="w-[300px] mb-[20px] bg-transparent border-b-2 border-white text-white placeholder-white" required/><br/>
                    
//                     <input  type="number"  
//                             value={Phone}
//                             onChange={(e)=>setphone(e.target.value)}
//                             placeholder="Enter your Phone number" className="w-[300px] mb-[20px] bg-transparent border-b-2 border-white text-white placeholder-white" required/><br/>
                    
//                     <input  type="date" 
//                             value={DOB}
//                             onChange={(e)=>setdob(e.target.value)}
//                             placeholder="Enter your date of birth" 
//                             className="w-[300px] mb-[20px] bg-transparent border-b-2 border-white text-white placeholder-white" required/><br/>
                    
//                     <label className="text-white" >Gender :</label>
//                         <label className="text-white mx-[10px]">
//                             <input type="radio" id="female" value="female" name="gender"
//                                 checked={Gender === "female"} onChange={(e) => setgender(e.target.value)} required/>
//                                 Female
//                         </label>
//                         <label className="text-white mx-[10px]">
//                             <input type="radio" id="male" value="male" name="gender"
//                                 checked={Gender === "male"} onChange={(e) => setgender(e.target.value)} required/>
//                             Male
//                         </label>
//                         <label className="text-white mx-[10px]">
//                             <input type="radio" id="Other" value="Other" name="gender"
//                                 checked={Gender === "Other"} onChange={(e) => setgender(e.target.value)} required/>
//                             Other
//                         </label><br />


//                     <textarea 
//                             placeholder="address" 
//                             value={Address}
//                             onChange={(e)=>setaddress(e.target.value)}
//                             className="w-[300px] h-[25px] my-[5px] bg-transparent border-b-2 border-white text-white placeholder-white" required></textarea><br/>
                    
//                      <select id="role" 
//                             value={UserRole}
//                             onChange={(e) => setuserrole(e.target.value)}
//                             className="w-[300px] mb-[20px] bg-transparent border-b-2 border-white text-white" required>
//                         <option value="" disabled>Select your role</option>
//                         <option value="admin" className="text-black">Admin</option>
//                         <option value="user" className="text-black">User</option>
//                     </select><br/> 


//                     <input  type="password" 
//                             value={Password}
//                             onChange={(e)=>setpassword(e.target.value)}
//                             placeholder="Enter your password" className="w-[300px] mb-[40px] bg-transparent border-b-2 border-white text-white placeholder-white" required/><br/>
                    
//                     <button type="submit" className="w-[300px] bg-[#1799B6] text-white py-2 px-4 rounded border-2 border-white hover:bg-white hover:text-black">
//                     Register
//                     </button><br/>
                    
//                     <p className="mt-[20px] text-white text-center">Already have an account ?<Link to="/Login" className="text-sky-700">Login</Link></p>
                
//                 </form> 
//             </div>
//         </div>
//     </div>
//   )
// }

// export default Register
